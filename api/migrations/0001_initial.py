# Generated by Django 3.2.16 on 2025-09-04 06:35

import api.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authtoken', '0003_tokenproxy'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomToken',
            fields=[
                ('token_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='authtoken.token')),
            ],
            bases=('authtoken.token',),
        ),
        migrations.CreateModel(
            name='Matching',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('grading_type', models.PositiveSmallIntegerField(blank=True, default=3, null=True, validators=[django.core.validators.MaxValueValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('randomize', models.BooleanField(blank=True, null=True)),
                ('enumeration', models.PositiveSmallIntegerField(blank=True, default=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MultipleSelect',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('randomize', models.BooleanField(blank=True, null=True)),
                ('enumeration', models.PositiveSmallIntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('style', models.PositiveSmallIntegerField(blank=True, default=2, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('grading_type', models.PositiveSmallIntegerField(blank=True, default=2, null=True, validators=[django.core.validators.MaxValueValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('index', models.IntegerField(blank=True, null=True)),
                ('number_provided', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('raw_header', models.TextField(blank=True, null=True)),
                ('raw_content', models.TextField(blank=True, null=True)),
                ('parser_output_xml', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('questiontype', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('points', models.DecimalField(decimal_places=4, default=1, max_digits=8, null=True)),
                ('difficulty', models.PositiveSmallIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('mandatory', models.BooleanField(blank=True, null=True)),
                ('hint', models.TextField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('warning', models.TextField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionLibrary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('folder_path', models.FilePathField(path='/code')),
                ('temp_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('is_busy_processing', models.BooleanField(blank=True, default=False)),
                ('session_id', models.TextField(blank=True, null=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('randomize_answer', models.BooleanField(blank=True, default=None, null=True)),
                ('media_folder', models.TextField(blank=True, null=True)),
                ('enumeration', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('image_path', models.FilePathField(path=None)),
                ('shuffle', models.BooleanField(blank=True, null=True)),
                ('main_title', models.TextField(blank=True, null=True)),
                ('filtered_main_title', models.TextField(blank=True, null=True)),
                ('end_answers_raw', models.TextField(blank=True, null=True)),
                ('formatter_error', models.TextField(blank=True, null=True)),
                ('formatter_output', models.TextField(blank=True, null=True)),
                ('pandoc_output_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('pandoc_output', models.TextField(blank=True, null=True)),
                ('txt_output', models.TextField(blank=True, null=True)),
                ('sectioner_output', models.TextField(blank=True, null=True)),
                ('imsmanifest_string', models.TextField(blank=True, null=True)),
                ('imsmanifest_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('questiondb_string', models.TextField(blank=True, null=True)),
                ('questiondb_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('zip_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('json_data', models.JSONField(blank=True, default=dict, null=True)),
                ('output_zip_file', models.FileField(blank=True, null=True, upload_to=api.models.format_file_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_question_errors', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('total_document_errors', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
            ],
            options={
                'verbose_name_plural': 'question libraries',
            },
        ),
        migrations.CreateModel(
            name='WrittenResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enable_student_editor', models.BooleanField(blank=True, null=True)),
                ('initial_text', models.TextField(blank=True, null=True)),
                ('answer_key', models.TextField(blank=True, null=True)),
                ('enable_attachments', models.BooleanField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_response', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='TrueFalse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('true_weight', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('true_feedback', models.TextField(blank=True, null=True)),
                ('false_weight', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('false_feedback', models.TextField(blank=True, null=True)),
                ('enumeration', models.PositiveSmallIntegerField(blank=True, default=4, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='true_false', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_main_content', models.BooleanField(blank=True, default=False, null=True)),
                ('order', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('validated', models.BooleanField(blank=True, default=False, null=True)),
                ('finished_processing', models.BooleanField(blank=True, default=False, null=True)),
                ('raw_content', models.TextField(blank=True, null=True)),
                ('questions_processed', models.DecimalField(decimal_places=0, max_digits=3, null=True)),
                ('questions_expected', models.DecimalField(decimal_places=0, max_digits=3, null=True)),
                ('processing_time', models.DecimalField(decimal_places=0, max_digits=3, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('is_title_displayed', models.BooleanField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_text_displayed', models.BooleanField(blank=True, null=True)),
                ('shuffle', models.BooleanField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('question_library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.questionlibrary')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.section'),
        ),
        migrations.CreateModel(
            name='Ordering',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, null=True)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ord_feedback', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordering', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleSelectAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('index', models.TextField(blank=True, null=True)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('answer_feedback', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('multiple_select', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_select_answers', to='api.multipleselect')),
            ],
        ),
        migrations.AddField(
            model_name='multipleselect',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_select', to='api.question'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('index', models.TextField(blank=True, null=True)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('answer_feedback', models.TextField(blank=True, null=True)),
                ('weight', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('multiple_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_answers', to='api.multiplechoice')),
            ],
        ),
        migrations.AddField(
            model_name='multiplechoice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice', to='api.question'),
        ),
        migrations.CreateModel(
            name='MatchingChoice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('choice_text', models.TextField(blank=True, null=True)),
                ('matching', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_choices', to='api.matching')),
            ],
        ),
        migrations.CreateModel(
            name='MatchingAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('matching_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_answers', to='api.matchingchoice')),
            ],
        ),
        migrations.AddField(
            model_name='matching',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching', to='api.question'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.TextField(blank=True, null=True)),
                ('question_library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.questionlibrary')),
            ],
        ),
        migrations.CreateModel(
            name='Fib',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=11)),
                ('text', models.TextField(blank=True, null=True)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('size', models.DecimalField(decimal_places=0, max_digits=3, null=True)),
                ('weight', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fib', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='EndAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('index', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('question_library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endanswers', to='api.questionlibrary')),
            ],
        ),
    ]
